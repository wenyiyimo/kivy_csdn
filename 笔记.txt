https://github.com/bwsnb/Free-Font 免费中文字体
https://github.com/zenozeng/Free-Chinese-Fonts 免费中文字体
https://github.com/shmily-yu/uniappLearn uniapp教程
https://github.com/xieyushi/uniappwebviewconnect webview uniapp通讯
https://github.com/zz694818748/uniapp-APP-m3u8  m3u8 下载
https://github.com/sewenfengqing/uniapp-NotificationProgress 下载进度条
https://github.com/deepsearun/uniapp-applecms-movies/blob/main/pages/download/download.vue 下载模板

https://github.com/clearlove2303/lzg-uniapp/blob/6d0d9825dd5e6617a7a90e9f5f8359d077c3eff5/common/download-util.js 下载

https://github.com/512541024/-/blob/f33bb505def3d0534c048a94324855f33a5697c1/components/yfs-video/yfs-video.vue
https://github.com/xzebin/my-music/blob/614ff9ca97f939431190d291781a66b136fdb901/components/shoyu-video/shoyu-video.vue
https://github.com/WanyueKJ/wanyue_online_education_uniapp/blob/cc64f122fe3ee5774510420fcb7847f3fd2cbc69/packageB/pages/content-detail/content-detail.vue
https://github.com/minyuanriji/wwwfrontend/blob/cc5eb9abb3957a3ab1f6cca94632b27e92d34cb4/components/com-video/com-video.vue
https://github.com/MIchaelJier/Yunyun-Study-for-Mobile/blob/0ad3da48e6ea3d9507a5b8a6468bce3bd6fec377/pages/Coursedetails/video/myVideo.vue



<template>
	
	<view class="list">
	{{progress}}
		
	</view>
</template>

<script>
import http from '../../utils/request.js';
export default {
	data() {
		return {
			progress:'解析中...',
			data:[],
			numLen:0,
			hasDownNum:0,
			url:'https://consumer.huawei.com/content/dam/huawei-cbg-site/cn/mkt/pdp/phones/p50-pocket/video/hinge-xs.mp4'
			// url:'http://imss-video.huawei.com/video/play/8a821e175d8d71a2015f378122ff2933/8a821e1661390b8e016218468222162c/34.m3u8?fromAdapt=true'
		};
	},
	methods: {
		gethHefRes(){
			this.progress='解析中...';
			this.numLen=0;
			this.hasDownNum=0;
			this.data=[];
			if(this.url.endsWith('.mp4')){
				this.downMP4(this.url)
			}else{
				let that = this
				
				uni.request({
					url: that.url,
					method: 'GET',
					timeout:10000,
					success(res) {
						that.getDownUrl(res,'',res.header)
						
					},
					fail(res) {
						console.log(res)
					}
				})
			}
		},
		async getDownUrl(res, host,header) {
			let num = 0;
			let urlNum=0;
			var arr = res.data.split("\n");
			for(let line of arr){
				line = line.trim()
				if (line == '') {
					continue;
				}
				if (line.startsWith('#EXT')) {
					this.data.push(line)
					num = num+1;
				}else{
					if (line.startsWith('/')) {
					var url = host + line	
					} 
					if(line.indexOf('://') != -1) {
					  var  url = line
					}
				this.downFile(url,num,header)
				this.data.push(url);
				num=num+1;
				urlNum = urlNum+1;
				}
			}
			this.numLen=urlNum;
		},
		async downFile(url,num,header){
			const downloadTask = uni.downloadFile({
			    url: url,
				header:header,
				timeout:15,
			    success: (res) => {
					if(res.statusCode==200){
						this.data[num]=res.tempFilePath;
						this.hasDownNum=this.hasDownNum+1;
					}else{
						this.hasDownNum=this.hasDownNum+1;	
					}
					this.progress=`${this.hasDownNum}/${this.numLen}`;
					if(this.hasDownNum==this.numLen){
						this.progress='下载完成'
					}
			    },	
				fail:() =>{
					this.hasDownNum=this.hasDownNum+1;
					this.progress=`${this.hasDownNum}/${this.numLen}`;
				}
			});
		},
		async downMP4(url){
			const downloadTask = uni.downloadFile({
			    url: url,
			    success: (res) => {
			        if (res.statusCode === 200) {
			            this.progress='下载完成'
			        }else{
						this.progress='下载失败'
					}
			    }
			});
			
			downloadTask.onProgressUpdate((res) => {
				this.progress=`${res.progress}%`
	
			});
		}
		},
		onLoad:function(){
			this.gethHefRes()
		}
}
</script>

<style>
	
.list {

	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-between;
	
}


</style>
<template>
	<view class="download">
		<view class="header">
			<view style="height: 40px;background-color: #FFFFFF;"></view>
			<view style="flex-direction: row;justify-content: center;background-color: #FFFFFF;">
				<text class="head" style="justify-content: center;">下载</text>
				</view>
		</view>

		<view class="body">
		   <view class="tag-data" v-if="flag">
		   	<view class="out-item">
		   		<view class="item-box">
		   			<text class="item-title">{{ nowDown[4] }}-{{ nowDown[0] }}</text>
		   			<text class="item-name">来源：{{ nowDown[3] }}-{{ nowDown[2] }}</text>
		   		</view>
		   
		   		<view class="item-state">
		   			<view class="down-state">{{ progress }}</view>
		   		</view>
		   	</view>
		   </view> 
			<view class="tag-data" v-for="(item, index) in downloadLists" :key="index">
				<view class="out-item">
					<view class="item-box">
						<text class="item-title">{{ item[4] }}-{{ item[0] }}</text>
						<text class="item-name">来源：{{ item[3] }}-{{ item[2] }}</text>
					</view>

					<view class="item-state">
						<view class="down-state">{{ item[5] }}</view>
						<image :src="removeImage" mode="aspectFit" class="removeNotice" @click="removeItem(index)"></image>
					</view>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
import downm3u8 from './download.js';
import http from '../../utils/request.js';
export default {
	data() {
		return {
		    flag:false,
			nowDown:0,
			downloadLists: [],
			numLen: 0,//m3u8长度
			hasDownNum: 0,
			progress: null,
			removeImage: '../../static/delete.png'
		};
	},
	methods: {
		
		removeItem(item) {
			this.downloadLists.splice(item, item + 1);
			uni.setStorageSync('downLists', this.downloadLists);
		},
		async preitem(){
			for(let i=0;i<this.downloadLists.length;i++){
				let item=this.downloadLists[i];
				if(item[5]!="已完成"){
					this.gethHefRes(item)
					return
			}
		}
		},
		gethHefRes(item) {
		
			this.progress = '解析中...';
			this.numLen = 0;
			this.hasDownNum = 0;
			let data = [];
			if (this.url.endsWith('.mp4')) {
				this.downMP4(this.url);
			} else {
				let that = this;

				uni.request({
					url: that.url,
					method: 'GET',
					timeout: 10000,
					success(res) {
						that.getDownUrl(res, '', res.header);
					},
					fail(res) {
						console.log(res);
					}
				});
			}
		},
		async getDownUrl(res, host, header) {
			let num = 0;
			let urlNum = 0;
			var arr = res.data.split('\n');
			for (let line of arr) {
				line = line.trim();
				if (line == '') {
					continue;
				}
				if (line.startsWith('#EXT')) {
					this.data.push(line);
					num = num + 1;
				} else {
					if (line.startsWith('/')) {
						var url = host + line;
					}
					if (line.indexOf('://') != -1) {
						var url = line;
					}
					this.downFile(url, num, header);
					this.data.push(url);
					num = num + 1;
					urlNum = urlNum + 1;
				}
			}
			this.numLen = urlNum;
		},
		async downFile(url, num, header) {
			const downloadTask = uni.downloadFile({
				url: url,
				header: header,
				timeout: 15,
				success: res => {
					if (res.statusCode == 200) {
						this.data[num] = res.tempFilePath;
						this.hasDownNum = this.hasDownNum + 1;
					} else {
						this.hasDownNum = this.hasDownNum + 1;
					}
					this.progress = `${this.hasDownNum}/${this.numLen}`;
					if (this.hasDownNum == this.numLen) {
						this.progress = '下载完成';
					}
				},
				fail: () => {
					this.hasDownNum = this.hasDownNum + 1;
					this.progress = `${this.hasDownNum}/${this.numLen}`;
				}
			});
		},
		async downMP4(url) {
			const downloadTask = uni.downloadFile({
				url: url,
				success: res => {
					if (res.statusCode === 200) {
						this.progress = '下载完成';
					} else {
						this.progress = '下载失败';
					}
				}
			});

			downloadTask.onProgressUpdate(res => {
				this.progress = `${res.progress}%`;
			});
		}
	},
	onLoad() {},
	onShow() {
		this.downloadLists = uni.getStorageSync('downLists');
		console.log(this.downloadLists);
	}
};
</script>

<style lang="scss" scoped>
.download {
	.header {
		display: flex;
		flex-direction: column;
		justify-content: center;
		position: sticky;
		top: 0px;
		z-index: 99;
	}
.tab-data {
	    margin-top: 20px;
		display: flex;
		flex-direction: row;
		justify-content: space-around;
	}
	.tab-item {
		font-size: 20px;
		color: #000;

		margin-bottom: 10px;
	}
	.tab-item-active {
		font-size: 20px;
		color: #00aa00;

		margin-bottom: 10px;
	}
	.tag-data {
		margin-top: 20px;
	}
	.out-item {
		display: flex;
		margin-left: 20px;
		margin-right: 20px;
		flex-direction: row;
		justify-content: space-between;
	}
	.item-state {
		margin-top: 10px;
		margin-left: 25px;
		display: flex;
		flex-direction: row;
		justify-content: center;
	}
	.item-box {
		display: flex;
		flex-direction: column;
		justify-content: space-around;
	}

	.item-title {
		font-size: 20px;
	}

	.item-name {
		color: #999;
		font-size: 16px;
	}
	.down-state {
		font-size: 20px;
	}
	.removeNotice {
		margin-left: 20px;
		height: 30px;
		width: 35px;
		margin-bottom: 20px;
	}
}
</style>
