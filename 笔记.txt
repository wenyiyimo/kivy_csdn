https://github.com/bwsnb/Free-Font 免费中文字体
https://github.com/zenozeng/Free-Chinese-Fonts 免费中文字体
https://github.com/shmily-yu/uniappLearn uniapp教程
https://github.com/xieyushi/uniappwebviewconnect webview uniapp通讯
https://github.com/zz694818748/uniapp-APP-m3u8  m3u8 下载
https://github.com/sewenfengqing/uniapp-NotificationProgress 下载进度条
https://github.com/deepsearun/uniapp-applecms-movies/blob/main/pages/download/download.vue 下载模板

https://github.com/clearlove2303/lzg-uniapp/blob/6d0d9825dd5e6617a7a90e9f5f8359d077c3eff5/common/download-util.js 下载

https://github.com/512541024/-/blob/f33bb505def3d0534c048a94324855f33a5697c1/components/yfs-video/yfs-video.vue
https://github.com/xzebin/my-music/blob/614ff9ca97f939431190d291781a66b136fdb901/components/shoyu-video/shoyu-video.vue
https://github.com/WanyueKJ/wanyue_online_education_uniapp/blob/cc64f122fe3ee5774510420fcb7847f3fd2cbc69/packageB/pages/content-detail/content-detail.vue
https://github.com/minyuanriji/wwwfrontend/blob/cc5eb9abb3957a3ab1f6cca94632b27e92d34cb4/components/com-video/com-video.vue
https://github.com/MIchaelJier/Yunyun-Study-for-Mobile/blob/0ad3da48e6ea3d9507a5b8a6468bce3bd6fec377/pages/Coursedetails/video/myVideo.vue


// 获取右边菜单每个item到顶部的距离
getMenuItemTop() {
	new Promise(resolve => {
		let selectorQuery = uni.createSelectorQuery();
		selectorQuery.selectAll('.class-item').boundingClientRect((rects) => {
			// 如果节点尚未生成，rects值为[](因为用selectAll，所以返回的是数组)，循环调用执行
			if(!rects.length) {
				setTimeout(() => {
					this.getMenuItemTop();
				}, 500);
				return ;
			}
			rects.forEach((rect) => {
				// 这里减去rects[0].top，是因为第一项顶部可能不是贴到导航栏(比如有个搜索框的情况)
				this.arr.push(rect.top - rects[0].top);
				resolve();
			})
		}).exec()
	})
},



// 获取一个目标元素的高度
getElRect(elClass, dataVal) {
	new Promise((resolve, reject) => {
		const query = uni.createSelectorQuery().in(this);
		query.select('.' + elClass).fields({
			size: true
		}, res => {
			// 如果节点尚未生成，res值为null，循环调用执行
			if (!res) {
				setTimeout(() => {
					this.getElRect(elClass);
				}, 10);
				return;
			}
			this[dataVal] = res.height;
			resolve();
		}).exec();
	})
},
let that = this;
this.timeSet=setInterval(function(){
			uni.createSelectorQuery().selectViewport().scrollOffset(res => {
			  // console.log(res.scrollTop);
			  console.log(res)
			  if(res.scrollHeight-res.scrollTop<this.pageHeight){
				  that.fixedstate='fixed'; 
			  }else{
				  that.fixedstate='relative'
			  }
			}).exec();
		
	},1000);
onUnload(){
		clearInterval(this.timeSet)
	},
