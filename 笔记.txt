https://github.com/bwsnb/Free-Font 免费中文字体
https://github.com/zenozeng/Free-Chinese-Fonts 免费中文字体
https://github.com/shmily-yu/uniappLearn uniapp教程
https://github.com/xieyushi/uniappwebviewconnect webview uniapp通讯
https://github.com/zz694818748/uniapp-APP-m3u8  m3u8 下载
https://github.com/sewenfengqing/uniapp-NotificationProgress 下载进度条
https://github.com/deepsearun/uniapp-applecms-movies/blob/main/pages/download/download.vue 下载模板

https://github.com/clearlove2303/lzg-uniapp/blob/6d0d9825dd5e6617a7a90e9f5f8359d077c3eff5/common/download-util.js 下载

https://github.com/512541024/-/blob/f33bb505def3d0534c048a94324855f33a5697c1/components/yfs-video/yfs-video.vue
https://github.com/xzebin/my-music/blob/614ff9ca97f939431190d291781a66b136fdb901/components/shoyu-video/shoyu-video.vue
https://github.com/WanyueKJ/wanyue_online_education_uniapp/blob/cc64f122fe3ee5774510420fcb7847f3fd2cbc69/packageB/pages/content-detail/content-detail.vue
https://github.com/minyuanriji/wwwfrontend/blob/cc5eb9abb3957a3ab1f6cca94632b27e92d34cb4/components/com-video/com-video.vue
https://github.com/MIchaelJier/Yunyun-Study-for-Mobile/blob/0ad3da48e6ea3d9507a5b8a6468bce3bd6fec377/pages/Coursedetails/video/myVideo.vue



<template>
	<view class="download">
		<view class="header">
			<view style="height: 40px;background-color: #FFFFFF;"></view>
			<view style="flex-direction: row;justify-content: center;background-color: #FFFFFF;"><text class="head" style="justify-content: center;">下载</text></view>
		</view>

		<view class="body">
			<view class="tag-data" v-if="flag">
				<view class="out-item">
					<view class="item-box">
						<text class="item-title">{{ nowDown[4] }}-{{ nowDown[0] }}</text>
						<text class="item-name">来源：{{ nowDown[3] }}-{{ nowDown[2] }}</text>
					</view>

					<view class="item-state">
						<view class="down-state">{{ progress }}</view>
					</view>
				</view>
			</view>
			<view class="tag-data" v-for="(item, index) in downloadLists" :key="index">
				<view class="out-item">
					<view class="item-box">
						<text class="item-title">{{ item[4] }}-{{ item[0] }}</text>
						<text class="item-name">来源：{{ item[3] }}-{{ item[2] }}</text>
					</view>

					<view class="item-state">
						<view class="down-state">{{ item[5] }}</view>
						<image :src="removeImage" mode="aspectFit" class="removeNotice" @click="removeItem(index)"></image>
					</view>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
import downm3u8 from './download.js';
import http from '../../utils/request.js';
export default {
	data() {
		return {
			url: '',
			flag: false,
			nowDown: 0, //当前下载的视频
			nowDownNum: -1, //当前下载的序号
			downloadLists: [],
			numLen: 0, //m3u8长度
			hasDownNum: 0, //已经下载的长度
			hasDown: [], //已经下载完成的片段路径
			progress: '嗅探中...',
			removeImage: '../../static/delete.png',
			data: [] //m3u8片段信息
		};
	},
	methods: {
		//删除项目
		removeItem(item) {
			if (this.downloadLists[item][5] != '已完成') {
				this.downloadLists.splice(item, item + 1);
				uni.setStorageSync('downLists', this.downloadLists);
			} else {
				for (let localpath of this.downloadLists[item][7]) {
					uni.removeSavedFile({
						filePath: localpath,
						complete: function(res) {
							console.log(res);
						}
					});
				}
				this.downloadLists.splice(item, item + 1);
				uni.setStorageSync('downLists', this.downloadLists);
			}
		},
		//更新下载列表
		updateItem() {
			this.downloadLists.splice(this.nowDownNum, this.nowDownNum + 1);
			this.downloadLists.push(this.nowDown);
			uni.setStorageSync('downLists', this.downloadLists);
		},
		//开始下载
		async preitem() {
			this.flag = false;
			for (let i = 0; i < this.downloadLists.length; i++) {
				let item = this.downloadLists[i];
				if (item[5] != '已完成') {
					this.flag = true;
					this.nowDown = item;
					this.nowDownNum = i;
					this.getPlayUrl(item[1]);
					return;
				}
			}
		},
		//判断m3u8还是MP4，删除上次中断的残留
		gethHefRes(url) {
			if (this.hasDownNum != 0) {
				for (let localpath of this.hasDown) {
					uni.removeSavedFile({
						filePath: localpath,
						complete: function(res) {
							console.log(res);
						}
					});
				}
			}
			this.hasDown = [];
			this.progress = '解析中...';
			this.numLen = 0;
			this.hasDownNum = 0;
			this.data = [];
			if (url.indexOf('mp4') != -1) {
				this.downMP4(url);
			} else {
				let that = this;
				console.log(url);
				uni.request({
					url: url,
					method: 'GET',
					timeout: 10000,
					success(res) {
						that.getDownUrl(res, '', res.header);
					},
					fail(res) {
						console.log(res);
					}
				});
			}
		},
		//获取m3u8片段信息
		async getDownUrl(res, host, header) {
			let num = 0;
			let urlNum = 0;
			var arr = res.data.split('\n');
			for (let line of arr) {
				line = line.trim();
				if (line == '') {
					continue;
				}
				if (line.startsWith('#EXT')) {
					this.data.push(line);
					num = num + 1;
				} else {
					if (line.startsWith('/')) {
						var url = host + line;
					}
					if (line.indexOf('://') != -1) {
						var url = line;
					}
					this.downFile(url, num, header);
					this.data.push(url);
					num = num + 1;
					urlNum = urlNum + 1;
				}
			}
			this.numLen = urlNum;
		},
		//下载m3u8片段
		async downFile(url, num, header) {
			let that = this;
			const downloadTask = uni.downloadFile({
				url: url,
				header: header,
				timeout: 15,
				success: res => {
					that.hasDownNum = that.hasDownNum + 1;
					that.progress = `${that.hasDownNum}/${that.numLen}`;
					if (res.statusCode == 200) {
						uni.saveFile({
							tempFilePath: res.tempFilePath,
							success: function(res) {
								that.data[num] = res.savedFilePath;
								that.hasDown.push(res.savedFilePath);
							}
						});
					}
					if (that.hasDownNum == that.numLen) {
						that.progress = '已完成';
						that.nowDown[5] = '已完成';
						that.writeFile();
					}
				},
				fail: () => {
					that.hasDownNum = that.hasDownNum + 1;
					that.progress = `${that.hasDownNum}/${that.numLen}`;
					if (that.hasDownNum == that.numLen) {
						that.progress = '已完成';
						that.nowDown[5] = '已完成';
						that.writeFile();
					}
				}
			});
		},
		//下载MP4
		async downMP4(url) {
			let that = this;
			const downloadTask = uni.downloadFile({
				url: url,
				success: res => {
					if (res.statusCode === 200) {
						that.progress = '已完成';
						uni.saveFile({
							tempFilePath: res.tempFilePath,
							success: function(res) {
								console.log(that.nowDown);
								that.nowDown[5] = '已完成';
								that.nowDown.push(res.savedFilePath);
								that.nowDown.push([res.savedFilePath]);
								that.updateItem();
							},
							fail: () => {
								that.progress = '下载失败';
							}
						});
					} else {
						that.progress = '下载失败';
					}
				},
				fail: () => {
					that.progress = '下载失败';
				}
			});

			downloadTask.onProgressUpdate(res => {
				that.progress = `${res.progress}%`;
			});
		},
		writeFile() {
			let text = '';
			for (let line of this.data) {
				text = text + line + '\n';
			}
			plus.io.requestFileSystem(plus.io.PRIVATE_DOC, function(fobject) {
				// fs.root是根目录操作对象DirectoryEntry
				fobject.root.getDirectory(
					'_doc/',
					{
						create: true
					},
					function(fileEntry) {
						console.log(fileEntry.toLocalURL());
					}
				);
			});
			plus.io.requestFileSystem(plus.io.PRIVATE_DOC, function(fobject) {
				// fs.root是根目录操作对象DirectoryEntry
				fobject.root.getFile(
					'_doc/' + this.nowDown[1].replace('/', '-') + '.m3u8',
					{
						create: true
					},
					function(fileEntry) {
						console.log(fileEntry.toLocalURL());
						this.nowDown.push(fileEntry.toLocalURL());
						this.nowDown.push(this.hasDown);
						this.hasDown = [];
						this.hasDownNum = 0;
						this.updateItem();
						fileEntry.createWriter(
							function(writer) {
								writer.seek(0);
								writer.write(text);
							},
							function(e) {}
						);
					},
					function(e) {
						console.log(e);
					}
				);
			});
		},
		getPlayUrl(url) {
			uni.setStorageSync('urlPlay', '');
			//#ifdef APP-PLUS
			var wv = plus.webview.create(url);
			wv.overrideUrlLoading({ mode: 'allow', match: '.*(mp4|video|m3u8).*' }, function(e) {
				console.log(e.url);
			});
			// 监听到页面加载图片资源时显示（{match:'.*\.(jpg|png|jpeg|bmp)\b'}）
			wv.listenResourceLoading({ match: '.*(mp4|video|m3u8).*' }, function(e) {
				var matchRule = uni.getStorageSync('matchRule');
				if (
					e.url.indexOf('51.la/') == -1 &&
					!e.url.endsWith('.js') &&
					e.url.indexOf('png') == -1 &&
					e.url.indexOf('.css') === -1 &&
					e.url.indexOf('gif') === -1 &&
					e.url.indexOf('php') == -1 &&
					!e.url.endsWith('.jpg') &&
					e.url.indexOf(matchRule) === -1 &&
					e.url.indexOf('url=') == -1
				) {
					console.log(e.url);
					uni.setStorageSync('urlPlay', e.url);

					wv.close();
				}
			});
			//#endif
			let that = this;
			let alltime = 0;
			var obj = setInterval(function() {
				var urlPlay = uni.getStorageSync('urlPlay');
				alltime = alltime + 2000;

				if (alltime < 60000 && urlPlay != '') {
					that.gethHefRes(urlPlay);
					// 	setTimeout(function(){
					// 		that.videoContext.requestFullScreen();
					// 	},500)
					clearInterval(obj);
				}
				if (alltime > 60000) {
					this.nowDown[5] = '嗅探失败';
					that.updateItem();
					wv.close();
					clearInterval(obj);
				}
			}, 2000);
		}
	},
	onLoad() {},
	onShow() {
		this.downloadLists = uni.getStorageSync('downLists');
		console.log(this.downloadLists);
		this.preitem();
	}
};
</script>

<style lang="scss" scoped>
.download {
	.header {
		display: flex;
		flex-direction: column;
		justify-content: center;
		position: sticky;
		top: 0px;
		z-index: 99;
	}
	.tab-data {
		margin-top: 20px;
		display: flex;
		flex-direction: row;
		justify-content: space-around;
	}
	.tab-item {
		font-size: 20px;
		color: #000;

		margin-bottom: 10px;
	}
	.tab-item-active {
		font-size: 20px;
		color: #00aa00;

		margin-bottom: 10px;
	}
	.tag-data {
		margin-top: 20px;
	}
	.out-item {
		display: flex;
		margin-left: 20px;
		margin-right: 20px;
		flex-direction: row;
		justify-content: space-between;
	}
	.item-state {
		margin-top: 10px;
		margin-left: 25px;
		display: flex;
		flex-direction: row;
		justify-content: center;
	}
	.item-box {
		display: flex;
		flex-direction: column;
		justify-content: space-around;
	}

	.item-title {
		font-size: 20px;
	}

	.item-name {
		color: #999;
		font-size: 16px;
	}
	.down-state {
		font-size: 20px;
	}
	.removeNotice {
		margin-left: 20px;
		height: 30px;
		width: 35px;
		margin-bottom: 20px;
	}
}
</style>
